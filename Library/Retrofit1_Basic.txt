https://square.github.io/retrofit/
https://ppizil.tistory.com/27
https://newland435.tistory.com/25

// http 서버 통신을 쉽게 사용할 수 있게 해주는 안드로이드 라이브러리. 

// Rtrofit 은 HTTP API 를 Java 인터페이스로 전환한다. 

public interface GitHubService {
  @GET("users/{user}/repos")
  Call<List<Repo>> listRepos(@Path("user") String user);
}

// 장점

- 인터페이스와 메서드, 어떻게 요청이 생성됐는지 서술적으로 정의하는 어노테이션을 사용한다.

- 아파치, url, okhttp, 커스텀 클라이언트 등 어떤 HTTP 클라이언트라도 원하는대로 사용할 수 있다.

- 시리얼라이제이션이 플러그 형이다. 
	-> 다른 유형의 변환기를 추가할 수 있다. 
	Gson: com.squareup.retrofit2:converter-gson
 	Jackson: com.squareup.retrofit2:converter-jackson
	Moshi: com.squareup.retrofit2:converter-moshi
	Protobuf: com.squareup.retrofit2:converter-protobuf
	Wire: com.squareup.retrofit2:converter-wire
	Simple XML: com.squareup.retrofit2:converter-simplexml
	Scalars (primitives, boxed, and String): com.squareup.retrofit2:converter-scalars
...

안드로이드에서 http 통신을 하기 위해서는 웹서버와의 통신을 위한 HttpUrlConnection이 필요하다.
추가적으로 메인쓰레드에서 네트워크 작업을 할 수 없기에 추가로 AsyncTask가 필요하다. 
통신을 할 때마다 비동기 작업을 위한 AsyncTask 만드는 작업은 수고스럽다. 
Retrofit을 이용하면 웹서버와의 통신이 간편해진다. 


// 기본 사용법  +   api   +  gson  

*** github 아이디를 검색하여 해당 아이디의 repository 리스트를 가져오는 예제 ***

레트로핏의 4가지 분류
- 네트워크 통신에 필요한 정반적인 설정을 관리하는 Retrofit 바디
- 통신할 API 의 HTTP 메소드를 정의하는 Service Interface
- Request / Response 
- DTO (Data Trasfer Object) 


매니패스트 설정 
<uses-permission android:name="android.permission.INTERNET"/>
<application> android:usesCleartextTraffic="true" />


1. app - build.gradle 추가 
implementation 'com.squareup.retrofit2:retrofit:2.5.0'
implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

2. NetRetrofit.java   -->  Retrofit body
-> Service Interface 를 이용하여 Retrofit 객체를 생성할 클래스. 
-> NetRetrofit 싱글톤 생성 
-> BaseUrl 정하기 
-> 파싱을 위한 컨버터 추가 
-> 레트로핏 생성 



3. RetrofitService 인터페이스 --> Service 인터페이스 
-> 웹서버와의 통신을 위한 api 를 정의하기 위한 인터페이스 
-> GET Request를 사용하는 api 작성
-> 응답형식 ==> JsonObject를 담는 ArrayList
-> POST, DELETE, PUT 등의 다양한 Request Method 제공한다.
	 https://square.github.io/retrofit/ 

4. MainActivity.java
EditText 에 id를 입력하고 Button을 클릭하면
TextView에 해당 아이디의 repository 리스트 json 을 출력한다. 
-> ArayLsit<JsonObject>

Call<ArrayList<JsonObject>> res = NetRetrofit.getInstance().getService().getListRepos(id);
-> 싱글톤으로 생성된 NetRetrofit에서 service를 가져온 후 작성한 getListRepos API를 사용한다. 
-> onResponse : 통신이 정상적으로 되었을 때 
-> onFailure : 에러발생







